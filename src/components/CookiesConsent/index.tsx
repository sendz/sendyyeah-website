'use client';

import React from "react";
import { pushDataLayer } from "@site/src/helpers/gtm";
import { useCookie } from "react-use";

export const CookiesConsent = () => {

  const [cookiesConsentCookie, updateCookiesConsentCookie] = useCookie('cookies_consent_config')
  const [showCookiesConsent, setShowCookiesConsent] = React.useState(!cookiesConsentCookie);

  const cookieConsent = (accepted: boolean) => {
    pushDataLayer({ event: 'cookie_consent', cookie_accepted: accepted });
    updateCookiesConsentCookie(JSON.stringify({ accepted }));
    setShowCookiesConsent(false);
  }

  if (cookiesConsentCookie && !showCookiesConsent) {
    // return a floating button to reconfigure the cookies
    return (
      <div className="w-24 fixed right-8 bottom-8 shadow-xl">
        <button className="button button-primary bg-white" onClick={() => setShowCookiesConsent(true)}>Cookies</button>
      </div>
    )
  }

  return (
    <div className="daisy-card w-96 bg-base-100 shadow-xl fixed right-8 bottom-8" style={{ borderRadius: 0 }}>
      <div className="daisy-card-body items-center text-center">
        <h2 className="daisy-card-title">Cookies!</h2>
        {cookiesConsentCookie && (
          <p>You have already configured your cookies, and here is your decision last time: <span className="font-bold">{JSON.parse(cookiesConsentCookie)?.accepted ? 'Accepted' : 'Denied'}</span>.</p>
        )}
        <p>We are using cookies for no reason, and some of cookies are not controlled by the owner of this site, probably it was generated by the tools that we use to make this webapp.</p>
        <div className="daisy-card-actions justify-end">
          <button className="button button-primary" onClick={() => cookieConsent(true)}>Accept</button>
          <button className="button" onClick={() => cookieConsent(false)}>Deny</button>
        </div>
      </div>
    </div>
  )
}
